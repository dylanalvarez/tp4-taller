cmake_minimum_required(VERSION 3.8)
project(TowerDefense)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS  "-std=c++11 -Werror -Wno-error=unused-command-line-argument -Wall -pthread")
find_package(PkgConfig)
pkg_check_modules(GTKMM gtkmm-3.0)

include_directories(${GTKMM_INCLUDE_DIRS})
link_directories(${GTKMM_LIBRARY_DIRS})

SET(GCC_COVERAGE_LINK_FLAGS "-Wl, -lcppunit -I./libraries/yaml-cpp/include -lyaml-cpp")
SET( CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}" )

set(SOURCE_FILES main.cpp src/common/GameServerSocket.h src/common/GameServerReceiver.h src/server/BlockingQueue.h src/server/BlockingQueue.cpp src/common/Exception.h src/common/Exception.cpp src/common/AcceptFailedException.h src/common/ServerSocket.h src/common/ServerSocket.cpp src/common/Socket.h src/common/Socket.cpp src/server/Thread.h src/server/Thread.cpp src/model/Vector.cpp src/model/Vector.h src/model/Towers/Tower.cpp src/model/Towers/Tower.h src/model/Towers/FireTower.cpp src/model/Towers/FireTower.h src/model/Enemy.cpp src/model/Enemy.h src/model/Path.cpp src/model/Path.h src/model/Scenario.cpp src/model/Scenario.h src/model/Range.cpp src/model/Range.h src/model/Exceptions/EnemyError.cpp src/model/Exceptions/EnemyError.h src/model/TowerDefenseGame.cpp src/model/TowerDefenseGame.h src/model/Exceptions/TowerError.cpp src/model/Exceptions/TowerError.h src/model/Player.cpp src/model/Player.h src/model/Exceptions/MatchError.cpp src/model/Exceptions/MatchError.h src/model/Factory/TowerFactory.h src/model/Factory/FireTowerFactory.cpp src/model/Factory/FireTowerFactory.h src/model/Towers/WaterTower.cpp src/model/Towers/WaterTower.h src/model/Factory/WaterTowerFactory.cpp src/model/Factory/WaterTowerFactory.h src/model/Towers/EarthTower.cpp src/model/Towers/EarthTower.h src/model/Factory/EarthTowerFactory.cpp src/model/Factory/EarthTowerFactory.h src/model/Towers/AirTower.cpp src/model/Towers/AirTower.h src/model/Factory/AirTowerFactory.cpp src/model/Factory/AirTowerFactory.h src/model/Upgrades/RangeLevelup.cpp src/model/Upgrades/RangeLevelup.h src/model/Upgrades/LevelupType.cpp src/model/Upgrades/LevelupType.h src/model/Upgrades/DamageLevelup.cpp src/model/Upgrades/DamageLevelup.h src/model/Upgrades/ReachLevelup.cpp src/model/Upgrades/ReachLevelup.h src/model/Upgrades/SlowdownLevelup.cpp src/model/Upgrades/SlowdownLevelup.h src/model/Spells/Spell.h src/model/Spells/Spell.h src/model/Spells/Terraforming.cpp src/model/Spells/Terraforming.h src/model/Spells/Fissure.cpp src/model/Spells/Fissure.h src/model/Spells/Meteorite.cpp src/model/Spells/Meteorite.h src/model/Spells/FireWall.cpp src/model/Spells/FireWall.h src/model/Spells/Freezing.cpp src/model/Spells/Freezing.h src/model/Spells/Blizzard.cpp src/model/Spells/Blizzard.h src/model/Spells/Tornato.cpp src/model/Spells/Tornato.h src/model/Spells/Ray.cpp src/model/Spells/Ray.h src/model/Spells/Spell.cpp src/server/Server.cpp src/server/Server.h src/server/Match.cpp src/server/Match.h src/server/Client.cpp src/server/Client.h src/common/GameServerSocket.cpp src/common/GameServerReceiver.cpp src/server/Actions/ThrowPositionalSpellAction.cpp src/server/Actions/ThrowPositionalSpellAction.h src/server/Actions/Action.h src/server/Actions/ThrowTargetSpellAction.cpp src/server/Actions/ThrowTargetSpellAction.h src/server/Actions/BuildTowerAction.cpp src/server/Actions/BuildTowerAction.h src/server/Actions/AddEnemyAction.cpp src/server/Actions/AddEnemyAction.h src/server/Actions/SendMessageAction.cpp src/server/Actions/SendMessageAction.h src/server/QueueProtected.cpp src/server/QueueProtected.h src/server/HordeCreator.cpp src/server/HordeCreator.h src/server/Horde.cpp src/server/Horde.h src/server/ClientSender.cpp src/server/ClientSender.h src/server/Context.cpp src/server/Context.h src/server/Actions/SendGameStateAction.cpp src/server/Actions/SendGameStateAction.h src/server/Actions/DistributeMessageAction.cpp src/server/Actions/DistributeMessageAction.h)
add_custom_target(Makefile)
add_executable(TowerDefense ${SOURCE_FILES})
add_executable(Test test_main.cpp test/VectorTest.cpp test/VectorTest.h src/model/Vector.cpp src/model/Vector.h src/model/Towers/Tower.cpp src/model/Towers/Tower.h src/model/Towers/FireTower.cpp src/model/Towers/FireTower.h test/EnemyTest.cpp test/EnemyTest.h src/model/Enemy.cpp src/model/Enemy.h src/model/Path.cpp src/model/Path.h src/model/Scenario.cpp src/model/Scenario.h test/ScenarioTest.cpp test/ScenarioTest.h src/model/Range.cpp src/model/Range.h test/RangeTest.cpp test/RangeTest.h src/model/Exceptions/EnemyError.cpp src/model/Exceptions/EnemyError.h test/TowerDefenseGameTest.cpp test/TowerDefenseGameTest.h src/model/TowerDefenseGame.cpp src/model/TowerDefenseGame.h src/model/Exceptions/TowerError.cpp src/model/Exceptions/TowerError.h src/model/Player.cpp src/model/Player.h src/model/Exceptions/MatchError.cpp src/model/Exceptions/MatchError.h src/model/Towers/EarthTower.cpp src/model/Towers/EarthTower.h src/model/Factory/TowerFactory.h src/model/Factory/FireTowerFactory.cpp src/model/Factory/FireTowerFactory.h src/model/Towers/AirTower.cpp src/model/Towers/AirTower.h src/model/Towers/WaterTower.cpp src/model/Towers/WaterTower.h src/model/Factory/WaterTowerFactory.cpp src/model/Factory/WaterTowerFactory.h src/model/Factory/EarthTowerFactory.cpp src/model/Factory/EarthTowerFactory.h src/model/Factory/AirTowerFactory.cpp src/model/Factory/AirTowerFactory.h src/model/Upgrades/RangeLevelup.cpp src/model/Upgrades/RangeLevelup.h src/model/Upgrades/LevelupType.cpp src/model/Upgrades/LevelupType.h src/model/Upgrades/SlowdownLevelup.cpp src/model/Upgrades/SlowdownLevelup.h src/model/Upgrades/DamageLevelup.cpp src/model/Upgrades/DamageLevelup.h src/model/Upgrades/ReachLevelup.cpp src/model/Upgrades/ReachLevelup.h src/model/Spells/Spell.h src/model/Spells/Spell.h src/model/Spells/Terraforming.cpp src/model/Spells/Terraforming.h src/model/Spells/Fissure.cpp src/model/Spells/Fissure.h src/model/Spells/Meteorite.cpp src/model/Spells/Meteorite.h src/model/Spells/FireWall.cpp src/model/Spells/FireWall.h src/model/Spells/Freezing.cpp src/model/Spells/Freezing.h src/model/Spells/Blizzard.cpp src/model/Spells/Blizzard.h src/model/Spells/Tornato.cpp src/model/Spells/Tornato.h src/model/Spells/Ray.cpp src/model/Spells/Ray.h src/model/Spells/Spell.cpp)
target_link_libraries(TowerDefense ${GTKMM_LIBRARIES})